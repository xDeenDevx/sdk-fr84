namespace offsets
{
	namespace USingleWeaponConfig
	{
			constexpr auto DebugFlag = 0x30; // Size: 4, Type: struct FWeaponDebugFlag
			constexpr auto WeaponBrand = 0x34; // Size: 1, Type: enum class ESolarWeaponBrand
			constexpr auto WeaponType = 0x35; // Size: 1, Type: enum class EWeaponType
			constexpr auto bSupportSecondaryFire = 0x36; // Size: 1, Type: bool
			constexpr auto CharacterStateWeightMap = 0x38; // Size: 80, Type: struct TMap<struct FString, float>
			constexpr auto MoveSpeedReduceCurveConfigs = 0x88; // Size: 16, Type: struct TArray<struct FMoveSpeedReduceCurveConfig>
			constexpr auto MoveSpeedReduceBonusInHipFire = 0x98; // Size: 4, Type: float
			constexpr auto MoveSpeedReduceBonusInAdsHipFire = 0x9c; // Size: 4, Type: float
			constexpr auto FireSockets = 0xa0; // Size: 16, Type: struct TArray<struct FSolarWeaponFireSocketData>
			constexpr auto MultiMuzzleSocketNames = 0xb0; // Size: 16, Type: struct TArray<struct FName>
			constexpr auto MultiBulletSocketNames = 0xc0; // Size: 16, Type: struct TArray<struct FName>
			constexpr auto MultiCastShellSocketNames = 0xd0; // Size: 16, Type: struct TArray<struct FName>
			constexpr auto MultiCastShellOnScopeSocketNames = 0xe0; // Size: 16, Type: struct TArray<struct FName>
			constexpr auto bIsSingleWeapon = 0xf0; // Size: 1, Type: bool
			constexpr auto bCanSuspendBolt = 0xf1; // Size: 1, Type: bool
			constexpr auto bIsHeavyFireWeapon = 0xf2; // Size: 1, Type: bool
			constexpr auto bIsFlamethrowerWeapon = 0xf3; // Size: 1, Type: bool
			constexpr auto bUseSpecialFireInputRespondConfig = 0xf4; // Size: 1, Type: bool
			constexpr auto FireInputRespondConfig = 0xf5; // Size: 10, Type: struct FSolarWeaponFireInputRespondConfig
			constexpr auto bSupportSingleShootMode = 0xff; // Size: 1, Type: bool
			constexpr auto bSupportAutoShootMode = 0x100; // Size: 1, Type: bool
			constexpr auto bSupportBurstShootMode = 0x101; // Size: 1, Type: bool
			constexpr auto AimOffsetReferenceAimDistance = 0x104; // Size: 4, Type: float
			constexpr auto MaxSpread = 0x108; // Size: 4, Type: float
			constexpr auto MinSpread = 0x10c; // Size: 4, Type: float
			constexpr auto HipFireBaseSpread = 0x110; // Size: 4, Type: float
			constexpr auto ShoulderFireBaseSpread = 0x114; // Size: 4, Type: float
			constexpr auto ADSBaseSpread = 0x118; // Size: 4, Type: float
			constexpr auto VhADSBaseSpread = 0x11c; // Size: 4, Type: float
			constexpr auto WeaponShootConfig = 0x120; // Size: 8, Type: struct UWeaponShootConfig*
			constexpr auto bCalcSpreadByStandardDistance = 0x128; // Size: 1, Type: bool
			constexpr auto SpreadStandardDistance = 0x12c; // Size: 4, Type: float
			constexpr auto SpreadStandardOriginMaxRange = 0x130; // Size: 4, Type: float
			constexpr auto bCalcSpreadByDistributionCurve = 0x134; // Size: 1, Type: bool
			constexpr auto SpreadDistributionCurve = 0x138; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto SpreadCOPMap = 0x1c0; // Size: 80, Type: struct TMap<struct FString, float>
			constexpr auto SpreadStatuSpeed = 0x210; // Size: 4, Type: float
			constexpr auto SpreadStatuIncreaseCoefficient = 0x218; // Size: 80, Type: struct TMap<struct FString, float>
			constexpr auto SpreadStatuReduceCoefficient = 0x268; // Size: 80, Type: struct TMap<struct FString, float>
			constexpr auto CustomSpreadArray = 0x2b8; // Size: 16, Type: struct TArray<struct FVector2D>
			constexpr auto CtrlFireTaskClass = 0x2c8; // Size: 8, Type: USolarWeaponAT_CtrlFireBase*
			constexpr auto FireTaskClass = 0x2d0; // Size: 8, Type: USolarWeaponAT_FireBase*
			constexpr auto PrimaryAmmo = 0x2d8; // Size: 8, Type: struct UAmmoConfig*
			constexpr auto PrimaryAmmoIndex = 0x2e0; // Size: 4, Type: int32_t
			constexpr auto PrimaryAmmoCap = 0x2e4; // Size: 4, Type: int32_t
			constexpr auto SecondaryAmmo = 0x2e8; // Size: 8, Type: struct UAmmoConfig*
			constexpr auto SecondaryAmmoIndex = 0x2f0; // Size: 4, Type: int32_t
			constexpr auto SecondaryAmmoCap = 0x2f4; // Size: 4, Type: int32_t
			constexpr auto UpgradedSecAmmo = 0x2f8; // Size: 8, Type: struct UAmmoConfig*
			constexpr auto UpgradedSecAmmoColor = 0x300; // Size: 16, Type: struct FLinearColor
			constexpr auto bNeedOverload = 0x310; // Size: 1, Type: bool
			constexpr auto OverloadMaxValue = 0x314; // Size: 4, Type: float
			constexpr auto NormalOverloadCoolingRate = 0x318; // Size: 4, Type: float
			constexpr auto NormalOverloadCoolingCurve = 0x320; // Size: 8, Type: struct UCurveFloat*
			constexpr auto OverloadCoolingPeriod = 0x328; // Size: 4, Type: float
			constexpr auto OverloadReduceRateCurve = 0x330; // Size: 8, Type: struct UCurveFloat*
			constexpr auto OverloadWarningRate = 0x338; // Size: 4, Type: float
			constexpr auto WeaponSwitchTime = 0x33c; // Size: 4, Type: float
			constexpr auto bCanAutoFire = 0x340; // Size: 1, Type: bool
			constexpr auto AutoFireDelayMs = 0x344; // Size: 4, Type: float
			constexpr auto AutoFireEndDelayMs = 0x348; // Size: 4, Type: float
			constexpr auto AutoFireCompensationRate = 0x34c; // Size: 4, Type: float
			constexpr auto bCanAimAssist = 0x350; // Size: 1, Type: bool
			constexpr auto AssistAimWeaponConfigAll = 0x358; // Size: 96, Type: struct FWeaponAssistAimWeaponConfigAll
			constexpr auto AssistAimWeaponConfigAllGamepad = 0x3b8; // Size: 96, Type: struct FWeaponAssistAimWeaponConfigAll
			constexpr auto DefaultFPPData = 0x418; // Size: 104, Type: struct FSolarWeaponFPPData
			constexpr auto FPPConfigByAspectRatioArray = 0x480; // Size: 16, Type: struct TArray<struct FSolarWeaponFPPConfig>
			constexpr auto bOneKeyScope = 0x490; // Size: 1, Type: bool
			constexpr auto ScopeOpenTime = 0x494; // Size: 4, Type: float
			constexpr auto ScopeOpenFOVTimeScale = 0x498; // Size: 4, Type: float
			constexpr auto SupportChangeTypeArray = 0x4a0; // Size: 16, Type: struct TArray<enum class EWeaponPartType>
			constexpr auto DefaultPartsArray = 0x4b0; // Size: 16, Type: struct TArray<int32_t>
			constexpr auto RecoilFireTimeWithScope = 0x4c0; // Size: 4, Type: float
			constexpr auto RecoilRecoverTimeWithScope = 0x4c4; // Size: 4, Type: float
			constexpr auto RecoilMagnitudeWithScope = 0x4c8; // Size: 4, Type: float
			constexpr auto RecoilCurveWithScope = 0x4d0; // Size: 8, Type: struct UCurveFloat*
			constexpr auto RecoilSkipSequenceSumWithScope = 0x4d8; // Size: 4, Type: int32_t
			constexpr auto RecoilCurveSequenceWithScope = 0x4e0; // Size: 16, Type: struct TArray<struct FVector2D>
			constexpr auto RecoilFireTimeNoScope = 0x4f0; // Size: 4, Type: float
			constexpr auto RecoilRecoverTimeNoScope = 0x4f4; // Size: 4, Type: float
			constexpr auto RecoilMagnitudeNoScope = 0x4f8; // Size: 4, Type: float
			constexpr auto RecoilCurveNoScope = 0x500; // Size: 8, Type: struct UCurveFloat*
			constexpr auto RecoilSkipSequenceSumNoScope = 0x508; // Size: 4, Type: int32_t
			constexpr auto RecoilCurveSequenceNoScope = 0x510; // Size: 16, Type: struct TArray<struct FVector2D>
			constexpr auto bIsGatling = 0x520; // Size: 1, Type: bool
			constexpr auto GatlingRotaryAcceleration = 0x524; // Size: 4, Type: float
			constexpr auto GatlingFireRotarySpeed = 0x528; // Size: 4, Type: float
			constexpr auto GatlingMaxRotarySpeed = 0x52c; // Size: 4, Type: float
			constexpr auto GatlingHoldTime = 0x530; // Size: 4, Type: float
			constexpr auto GatlingRotaryAttenuation = 0x534; // Size: 4, Type: float
			constexpr auto GatlingScatteringMagnification = 0x538; // Size: 4, Type: float
			constexpr auto GatlingOverHeatSmokeEffect = 0x540; // Size: 8, Type: struct UParticleSystem*
			constexpr auto GasAbilities = 0x548; // Size: 16, Type: struct TArray<UGameplayAbility*>
			constexpr auto HeadshotDamageFactor = 0x558; // Size: 4, Type: float
			constexpr auto Socket = 0x55c; // Size: 8, Type: struct FName
			constexpr auto LeftHandIKTargetSocket = 0x564; // Size: 8, Type: struct FName
			constexpr auto LeftHandIKTargetFemaleSocket = 0x56c; // Size: 8, Type: struct FName
			constexpr auto LeftHandIkEffectLocation = 0x574; // Size: 12, Type: struct FVector
			constexpr auto LeftHandIkJointLocation = 0x580; // Size: 12, Type: struct FVector
			constexpr auto LeftHandIkJointLocationForGunIdle = 0x58c; // Size: 12, Type: struct FVector
			constexpr auto LeftHandIkJointLocationForGunIdleWhenCrouch = 0x598; // Size: 12, Type: struct FVector
			constexpr auto RightHandIkEffectLocation = 0x5a4; // Size: 12, Type: struct FVector
			constexpr auto RightHandIkJointLocation = 0x5b0; // Size: 12, Type: struct FVector
			constexpr auto LeftHandGripRotationConfig = 0x5bc; // Size: 132, Type: struct FLeftHandGripConfig
			constexpr auto LeftHandGripRotationConfigForGunIdle = 0x640; // Size: 132, Type: struct FLeftHandGripConfig
			constexpr auto bShowCoolDownWidget = 0x6c4; // Size: 1, Type: bool
			constexpr auto Crosshair = 0x6c8; // Size: 8, Type: UCrossHairWidget*
			constexpr auto FeedbackWidget = 0x6d0; // Size: 8, Type: UFeedbackWidget*
			constexpr auto CrosshairWidgetData = 0x6d8; // Size: 56, Type: struct FSolarWeaponCrosshairData
			constexpr auto WeaponIcon = 0x710; // Size: 24, Type: struct FSoftObjectPath
			constexpr auto PrimaryFireBrush = 0x728; // Size: 152, Type: struct FSlateBrush
			constexpr auto PrimaryFireTxt = 0x7c0; // Size: 4, Type: int32_t
			constexpr auto SecondaryFireBrush = 0x7c8; // Size: 152, Type: struct FSlateBrush
			constexpr auto SecondaryFireTxt = 0x860; // Size: 4, Type: int32_t
			constexpr auto WeaponTextType = 0x868; // Size: 16, Type: struct FString
			constexpr auto ItemIcon = 0x878; // Size: 24, Type: struct FSoftObjectPath
			constexpr auto UpgradeParticleSystem = 0x890; // Size: 24, Type: struct FSoftObjectPath
	}
} 
