namespace offsets
{
	namespace USolarWheeledVehicleMovement
	{
			constexpr auto LowFrameRateDeltaTime = 0x138; // Size: 4, Type: float
			constexpr auto MinLocationDiffForSuspensionTrace = 0x13c; // Size: 4, Type: float
			constexpr auto Mass = 0x140; // Size: 4, Type: float
			constexpr auto CenterOfMassOffsetOnZ = 0x144; // Size: 4, Type: float
			constexpr auto CenterOfMassOffsetOnX = 0x148; // Size: 4, Type: float
			constexpr auto SuspensionClampRatioInLowFrame = 0x14c; // Size: 4, Type: float
			constexpr auto AccelerationCurve = 0x150; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto AccelerationCurveReverse = 0x1d8; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto ReverseEvaluationAccuracy = 0x260; // Size: 4, Type: int32_t
			constexpr auto SteerAngleLimit = 0x268; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto SteeringResetSpeed = 0x2f0; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto SteeringSpeed = 0x378; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto SteeringFraction = 0x400; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto SteerAngleMutiplier = 0x488; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto LowSteeringSpeed = 0x510; // Size: 4, Type: float
			constexpr auto LowSteeringSpeedAccelerationMultiplier = 0x514; // Size: 4, Type: float
			constexpr auto LowSteeringSpeedAngleLimitMultiplier = 0x518; // Size: 4, Type: float
			constexpr auto LowSpeedSteeringThresholdOnHorizontalInput = 0x51c; // Size: 4, Type: float
			constexpr auto FlightStabilizationDamping = 0x520; // Size: 4, Type: float
			constexpr auto LateralFrictionWhenOnlySteeringWheelsOnGround = 0x524; // Size: 4, Type: float
			constexpr auto Wheels = 0x528; // Size: 16, Type: struct TArray<struct FWheelData>
			constexpr auto RotationMinAngle = 0x538; // Size: 4, Type: float
			constexpr auto MaxPitchRotation = 0x53c; // Size: 4, Type: float
			constexpr auto MaxRollRotation = 0x540; // Size: 4, Type: float
			constexpr auto RotationTimeLimit = 0x544; // Size: 4, Type: float
			constexpr auto bOpenTimeLimit = 0x548; // Size: 1, Type: bool
			constexpr auto PitchTorqueInDegree = 0x54c; // Size: 4, Type: float
			constexpr auto RollTorqueInDegree = 0x550; // Size: 4, Type: float
			constexpr auto TorqueForUpsideDown = 0x554; // Size: 4, Type: float
			constexpr auto MaxAngularVelocityInAir = 0x558; // Size: 4, Type: float
			constexpr auto TorqueLerpAcceleration = 0x55c; // Size: 4, Type: float
			constexpr auto BalanceAngularVelocityWheelsOnGround = 0x560; // Size: 4, Type: float
			constexpr auto DustEffectScaleCurve = 0x568; // Size: 8, Type: struct UCurveFloat*
			constexpr auto BrokenWheelDustEffect = 0x570; // Size: 80, Type: struct TMap<enum class EPhysicalSurface, struct TSoftObjectPtr<UParticleSystem>>
			constexpr auto WheelDecelerationInBrakeLock = 0x5c0; // Size: 4, Type: float
			constexpr auto WheelLerpSpeedInSlip = 0x5c4; // Size: 4, Type: float
			constexpr auto GravityAcceleration = 0x5c8; // Size: 4, Type: float
			constexpr auto GravityAccelerationInAir = 0x5cc; // Size: 4, Type: float
			constexpr auto MinHeightForGravityAccelerationInAir = 0x5d0; // Size: 4, Type: float
			constexpr auto MaxHeightForGravityAccelerationInAir = 0x5d4; // Size: 4, Type: float
			constexpr auto GravityTransitionDuration = 0x5d8; // Size: 4, Type: float
			constexpr auto MaxStaticDegree = 0x5dc; // Size: 4, Type: float
			constexpr auto GravityMultiplierForAcceleration = 0x5e0; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto DecelerationUnderWater = 0x668; // Size: 4, Type: float
			constexpr auto bAutoSteeringEnabled = 0x66c; // Size: 1, Type: bool
			constexpr auto AutoSteeringThresholdTime = 0x670; // Size: 4, Type: float
			constexpr auto AutoSteeringSpeedThreshold = 0x674; // Size: 4, Type: float
			constexpr auto AutoSteeringTraceRadius = 0x678; // Size: 4, Type: float
			constexpr auto LeftAutoSteeringTraceStart = 0x67c; // Size: 12, Type: struct FVector
			constexpr auto RightAutoSteeringTraceStart = 0x688; // Size: 12, Type: struct FVector
			constexpr auto LeftToRightTangentDegree = 0x694; // Size: 4, Type: float
			constexpr auto AutoSteeringAngleLimit = 0x698; // Size: 4, Type: float
			constexpr auto AutoSteeringSpeed = 0x69c; // Size: 4, Type: float
			constexpr auto AutoSteeringResetSpeed = 0x6a0; // Size: 4, Type: float
			constexpr auto AutoSteeringLimitInputY = 0x6a4; // Size: 4, Type: float
			constexpr auto ThrottleInputThreshold = 0x6a8; // Size: 4, Type: float
			constexpr auto SteerInputCurve = 0x6b0; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto BrakeDelayTime = 0x738; // Size: 4, Type: float
			constexpr auto ThrottleReleaseDelayTime = 0x73c; // Size: 4, Type: float
			constexpr auto MicroThrottleInputThreshold = 0x740; // Size: 4, Type: float
			constexpr auto MicroThrottleInputSpeed = 0x744; // Size: 4, Type: float
			constexpr auto SteeringLimitMultiplierInDrift = 0x748; // Size: 4, Type: float
			constexpr auto AccelerationMultiplierInDrift = 0x74c; // Size: 4, Type: float
			constexpr auto AccelerationInDriftLerpSpeed = 0x750; // Size: 4, Type: float
			constexpr auto AccelerationOutDriftLerpSpeed = 0x754; // Size: 4, Type: float
			constexpr auto MinDriftSpeed = 0x758; // Size: 4, Type: float
			constexpr auto DriftCompensationRate = 0x75c; // Size: 4, Type: float
			constexpr auto DriftCancelTimeWithoutInput = 0x760; // Size: 4, Type: float
			constexpr auto DriftParticles = 0x768; // Size: 80, Type: struct TMap<enum class EPhysicalSurface, struct TSoftObjectPtr<UParticleSystem>>
			constexpr auto TimerForAntiStuck = 0x7b8; // Size: 4, Type: float
			constexpr auto StuckAcceleration = 0x7bc; // Size: 4, Type: float
			constexpr auto StuckAccelerationLerpSpeed = 0x7c0; // Size: 4, Type: float
			constexpr auto MinAntiRollThreshold = 0x7c4; // Size: 4, Type: float
			constexpr auto MaxAntiRollThreshold = 0x7c8; // Size: 4, Type: float
			constexpr auto ForwardGears = 0x7d0; // Size: 16, Type: struct TArray<struct FGearSetting>
			constexpr auto ReverseRpm = 0x7e0; // Size: 4, Type: float
			constexpr auto SlipRpmMultiplier = 0x7e4; // Size: 4, Type: float
			constexpr auto RpmSlipSpeed = 0x7e8; // Size: 4, Type: float
			constexpr auto BurnoutDelayTime = 0x7ec; // Size: 4, Type: float
			constexpr auto BurnoutSoundRatio = 0x7f0; // Size: 4, Type: float
			constexpr auto VehiclePawn = 0x930; // Size: 8, Type: struct ASolarVehiclePawn*
			constexpr auto VehicleMesh = 0x938; // Size: 8, Type: struct USkeletalMeshComponent*
			constexpr auto InputVecXForRotateInAir = 0x940; // Size: 4, Type: float
			constexpr auto InputVecYForRotateInAir = 0x944; // Size: 4, Type: float
			constexpr auto BalanceRotateSpendTime = 0x948; // Size: 4, Type: float
			constexpr auto InputRotateSpendTime = 0x94c; // Size: 4, Type: float
			constexpr auto InAirWheelsIndex = 0x950; // Size: 16, Type: struct TArray<char>
			constexpr auto AkAudioComponent = 0x970; // Size: 8, Type: struct UAkComponent*
	}
} 
