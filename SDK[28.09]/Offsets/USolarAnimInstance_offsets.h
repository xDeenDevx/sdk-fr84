namespace offsets
{
	namespace USolarAnimInstance
	{
			constexpr auto SolarCharacterOwner = 0x268; // Size: 8, Type: struct ASolarCharacter*
			constexpr auto OwnerRole = 0x270; // Size: 1, Type: enum class ENetRole
			constexpr auto LeftHandIKSocketName = 0x27c; // Size: 8, Type: struct FName
			constexpr auto RightHandWeaponSocketName = 0x284; // Size: 8, Type: struct FName
			constexpr auto LeftHandIKSocket2BoneTrans = 0x290; // Size: 48, Type: struct FTransform
			constexpr auto LeftHandEffectorLocation = 0x2c0; // Size: 12, Type: struct FVector
			constexpr auto LeftHandEffectorRotation = 0x2cc; // Size: 12, Type: struct FRotator
			constexpr auto CurrentLeftHandJointLocation = 0x2fc; // Size: 12, Type: struct FVector
			constexpr auto RightHandEffectorLocation = 0x308; // Size: 12, Type: struct FVector
			constexpr auto RightHandJointLocation = 0x314; // Size: 12, Type: struct FVector
			constexpr auto LeftIKHandWeight = 0x320; // Size: 4, Type: float
			constexpr auto CurrentReloadTimeRate = 0x324; // Size: 4, Type: float
			constexpr auto CurrentSwitchWeaponTimeRate = 0x328; // Size: 4, Type: float
			constexpr auto CurrentBoltTimeRate = 0x32c; // Size: 4, Type: float
			constexpr auto IsJog = 0x330; // Size: 1, Type: bool
			constexpr auto bInWater = 0x331; // Size: 1, Type: bool
			constexpr auto ViewPitch = 0x334; // Size: 4, Type: float
			constexpr auto ViewYaw = 0x338; // Size: 4, Type: float
			constexpr auto SimulatedProxyViewSmoothSpeed = 0x33c; // Size: 4, Type: float
			constexpr auto FireTPPBlendSpace = 0x348; // Size: 8, Type: struct UBlendSpace*
			constexpr auto FireTPPBlendSpaceX = 0x350; // Size: 4, Type: float
			constexpr auto FIreTPPBlendSpaceY = 0x354; // Size: 4, Type: float
			constexpr auto MinSwimSpeed = 0x358; // Size: 4, Type: float
			constexpr auto Direction = 0x35c; // Size: 4, Type: float
			constexpr auto Speed = 0x360; // Size: 4, Type: float
			constexpr auto InputDirection = 0x364; // Size: 4, Type: float
			constexpr auto IdleTurnType = 0x368; // Size: 1, Type: enum class EIdleTurnType
			constexpr auto TurnExplicitTime = 0x36c; // Size: 4, Type: float
			constexpr auto DamageDirection = 0x370; // Size: 4, Type: float
			constexpr auto DamageReactionAlpha = 0x374; // Size: 4, Type: float
			constexpr auto DamageNomalizeTime = 0x378; // Size: 4, Type: float
			constexpr auto CurrentGripData = 0x484; // Size: 132, Type: struct FLeftHandGripConfig
			constexpr auto Fire2PlayRateStand = 0x58c; // Size: 4, Type: float
			constexpr auto Fire2PlayRateCrouch = 0x590; // Size: 4, Type: float
			constexpr auto bHoldingShield = 0x594; // Size: 1, Type: bool
			constexpr auto ShieldRechargeIK = 0x595; // Size: 1, Type: bool
			constexpr auto FallingInputScale = 0x5e4; // Size: 4, Type: float
			constexpr auto IKOffsetLeftFootVector = 0x5e8; // Size: 12, Type: struct FVector
			constexpr auto IKOffsetRightFootVector = 0x5f4; // Size: 12, Type: struct FVector
			constexpr auto JointTargetLeftFootVector = 0x600; // Size: 12, Type: struct FVector
			constexpr auto JointTargetRightFootVector = 0x60c; // Size: 12, Type: struct FVector
			constexpr auto LeftFootRotation = 0x618; // Size: 12, Type: struct FRotator
			constexpr auto RightFootRotation = 0x624; // Size: 12, Type: struct FRotator
			constexpr auto HipOffsetVector = 0x630; // Size: 12, Type: struct FVector
			constexpr auto FootIKTraceDistanceRate = 0x63c; // Size: 4, Type: float
			constexpr auto CrouchFootIKTraceDistanceRate = 0x640; // Size: 4, Type: float
			constexpr auto FootIKInterpSpeed = 0x644; // Size: 4, Type: float
			constexpr auto LeftFootSocket = 0x648; // Size: 8, Type: struct FName
			constexpr auto RightFootSocket = 0x650; // Size: 8, Type: struct FName
			constexpr auto AnimParam_LeftOrRight = 0x658; // Size: 1, Type: bool
			constexpr auto LandingBlendWeight = 0x65c; // Size: 4, Type: float
			constexpr auto DefaultLeftHandWeaponAttachingBlendTime = 0x660; // Size: 4, Type: float
			constexpr auto DefaultLeftHandWeaponDetachingBlendTime = 0x664; // Size: 4, Type: float
			constexpr auto CurrentLeftHandWeaponAttachingBlendTime = 0x668; // Size: 4, Type: float
			constexpr auto CurrentLeftHandWeaponDetachingBlendTime = 0x66c; // Size: 4, Type: float
			constexpr auto FootIKEnableDelayTime = 0x698; // Size: 4, Type: float
			constexpr auto bActiveFootIK = 0x69c; // Size: 1, Type: bool
			constexpr auto FlailRate = 0x6d0; // Size: 4, Type: float
			constexpr auto ConfigPitchToZeroTime = 0x6d4; // Size: 4, Type: float
			constexpr auto JetPack2PoseSpeedRangeX = 0x6d8; // Size: 8, Type: struct FJetPackPoseSpeedRange
			constexpr auto JetPack2PoseSpeedRangeY = 0x6e0; // Size: 8, Type: struct FJetPackPoseSpeedRange
			constexpr auto JetPack2PoseSpeedRangeZ = 0x6e8; // Size: 8, Type: struct FJetPackPoseSpeedRange
			constexpr auto JetPack2PoseRestoreSmoothSpeed = 0x6f0; // Size: 4, Type: float
			constexpr auto JetPack2UnderWaterPoseSpeedRangeX = 0x6f4; // Size: 8, Type: struct FJetPackPoseSpeedRange
			constexpr auto JetPack2UnderWaterPoseSpeedRangeY = 0x6fc; // Size: 8, Type: struct FJetPackPoseSpeedRange
			constexpr auto bNewJet = 0x712; // Size: 1, Type: bool
			constexpr auto bIsJetFlying = 0x713; // Size: 1, Type: bool
			constexpr auto bEnableDamageReact = 0x714; // Size: 1, Type: char
			constexpr auto bEnableWeaponAdditiveA = 0x714; // Size: 1, Type: char
			constexpr auto bEnableHandIK = 0x714; // Size: 1, Type: char
			constexpr auto bEnableFootIK = 0x714; // Size: 1, Type: char
			constexpr auto bEnableWeaponAdditiveB = 0x714; // Size: 1, Type: char
			constexpr auto bEnableWeaponJitter = 0x714; // Size: 1, Type: char
			constexpr auto MaxLODDamageReact = 0x715; // Size: 1, Type: char
			constexpr auto MaxLODWeaponAdditiveA = 0x716; // Size: 1, Type: char
			constexpr auto MaxLODHandIK = 0x717; // Size: 1, Type: char
			constexpr auto MaxLODFootIK = 0x718; // Size: 1, Type: char
			constexpr auto MaxLODWeaponAdditiveB = 0x719; // Size: 1, Type: char
			constexpr auto MaxLODWeaponJitter = 0x71a; // Size: 1, Type: char
			constexpr auto bIsDead = 0x71b; // Size: 1, Type: char
			constexpr auto DeathAnimStartPosition = 0x71c; // Size: 4, Type: float
			constexpr auto SpecAnimBPs = 0x720; // Size: 80, Type: struct TMap<enum class ESpecAnimInstType, UAnimInstance*>
			constexpr auto bIsWalking = 0x770; // Size: 1, Type: char
			constexpr auto bIsCrouching = 0x770; // Size: 1, Type: char
			constexpr auto bIsFalling = 0x770; // Size: 1, Type: char
			constexpr auto bIsFlying = 0x770; // Size: 1, Type: char
			constexpr auto bIsSwimming = 0x770; // Size: 1, Type: char
			constexpr auto bIsSprinting = 0x770; // Size: 1, Type: char
			constexpr auto bIsInhibitSprinting = 0x770; // Size: 1, Type: char
			constexpr auto bIsSixDirRunForward = 0x770; // Size: 1, Type: char
			constexpr auto bIsVaulting = 0x771; // Size: 1, Type: char
			constexpr auto CurrentWalkMode = 0x774; // Size: 1, Type: enum class EWalkMode
			constexpr auto LastWalkMode = 0x775; // Size: 1, Type: enum class EWalkMode
			constexpr auto CurrentAirMoveMode = 0x776; // Size: 1, Type: enum class EAirMoveMode
			constexpr auto LastAirMoveMode = 0x777; // Size: 1, Type: enum class EAirMoveMode
			constexpr auto CurrentCruiseState = 0x778; // Size: 1, Type: enum class ECruiseAnimState
			constexpr auto CruiseStartSequence = 0x780; // Size: 8, Type: struct UAnimSequence*
			constexpr auto CruiseLoopSequence = 0x788; // Size: 8, Type: struct UAnimSequence*
			constexpr auto CruiseEndSequence = 0x790; // Size: 8, Type: struct UAnimSequence*
			constexpr auto MinSpeedForSkydiveFlyingInputBonus = 0x798; // Size: 4, Type: float
			constexpr auto MaxSpeedForSkydiveFlyingInputBonus = 0x79c; // Size: 4, Type: float
			constexpr auto InputYThresholdToCalcInputYByCamera = 0x7a0; // Size: 4, Type: float
			constexpr auto MinDeltaYawFromCameraToGetMaxInputY = 0x7a4; // Size: 4, Type: float
			constexpr auto CurrentSkydiveStage = 0x7a8; // Size: 1, Type: enum class ESkydiveStage
			constexpr auto MinWallRunSurfaceAngle = 0x7ac; // Size: 4, Type: float
			constexpr auto MaxWallRunSurfaceAngle = 0x7b0; // Size: 4, Type: float
			constexpr auto WeaponStatus = 0x7b8; // Size: 1, Type: enum class EWeaponStatus
			constexpr auto bIsBolting = 0x7b9; // Size: 1, Type: char
			constexpr auto bIsReloading = 0x7b9; // Size: 1, Type: char
			constexpr auto bIsLeftHandDetaching = 0x7b9; // Size: 1, Type: char
			constexpr auto bIsInVehicle = 0x7b9; // Size: 1, Type: char
			constexpr auto CurrentSkillAnimType = 0x7ba; // Size: 1, Type: enum class ESkillAnimType
	}
} 
