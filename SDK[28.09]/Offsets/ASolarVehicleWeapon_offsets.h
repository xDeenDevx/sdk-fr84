namespace offsets
{
	namespace ASolarVehicleWeapon
	{
			constexpr auto MaxWeaponPitch = 0xa98; // Size: 4, Type: float
			constexpr auto MinWeaponPitch = 0xa9c; // Size: 4, Type: float
			constexpr auto MaxWeaponYaw = 0xaa0; // Size: 4, Type: float
			constexpr auto MinWeaponYaw = 0xaa4; // Size: 4, Type: float
			constexpr auto PitchFollowSpeed = 0xaa8; // Size: 4, Type: float
			constexpr auto YawFollowSpeed = 0xaac; // Size: 4, Type: float
			constexpr auto SimulationSmoothLerpSpeed = 0xab0; // Size: 4, Type: float
			constexpr auto SimulationSmoothLerpThreshold = 0xab4; // Size: 4, Type: float
			constexpr auto bAbsoluteRotator = 0xab8; // Size: 1, Type: bool
			constexpr auto bHasScope = 0xab9; // Size: 1, Type: bool
			constexpr auto bHiddenMesh = 0xaba; // Size: 1, Type: bool
			constexpr auto ScopeCameraOffset = 0xabc; // Size: 12, Type: struct FVector
			constexpr auto ScopeTargetOffset = 0xac8; // Size: 12, Type: struct FVector
			constexpr auto ScopeCameraDistance = 0xad4; // Size: 4, Type: float
			constexpr auto ScopeBlendTime = 0xad8; // Size: 4, Type: float
			constexpr auto ScopeCameraData = 0xae0; // Size: 8, Type: struct UVehicleCameraDataAsset*
			constexpr auto ScopeFOVSwitchSpeed = 0xae8; // Size: 4, Type: float
			constexpr auto QuickAdsFireDelay = 0xaec; // Size: 4, Type: float
			constexpr auto DefaultWeaponScopeType = 0xaf0; // Size: 1, Type: enum class EVehicleWeaponScopeType
			constexpr auto ScopeUI = 0xaf8; // Size: 8, Type: UVehicleWeaponScopeWidget*
			constexpr auto PitchCameraOffset = 0xb00; // Size: 4, Type: float
			constexpr auto bCameraFocusWeapon = 0xb04; // Size: 1, Type: bool
			constexpr auto bUseNormalCameraMode = 0xb05; // Size: 1, Type: bool
			constexpr auto FireType = 0xb06; // Size: 1, Type: enum class EWeaponFireModeType
			constexpr auto FireSocketName = 0xb08; // Size: 8, Type: struct FName
			constexpr auto UpdateShotStartLocThreshold = 0xb10; // Size: 4, Type: float
			constexpr auto FireAixsType = 0xb14; // Size: 1, Type: enum class EAxis
			constexpr auto TurretVSocketName = 0xb18; // Size: 8, Type: struct FName
			constexpr auto TurretHSocketName = 0xb20; // Size: 8, Type: struct FName
			constexpr auto ShootTolerance = 0xb28; // Size: 4, Type: float
			constexpr auto AttachedVehicle = 0xb30; // Size: 8, Type: struct ASolarVehiclePawn*
			constexpr auto WeaponOwner = 0xb38; // Size: 8, Type: struct ASolarCharacter*
			constexpr auto bVehicleWeaponScopeOpen = 0xb40; // Size: 1, Type: bool
			constexpr auto bActivedWeapon = 0xb41; // Size: 1, Type: bool
			constexpr auto RotationYawAndPitchPacket = 0xb44; // Size: 4, Type: uint32_t
			constexpr auto VehicleMesh = 0xb60; // Size: 8, Type: struct USkeletalMeshComponent*
			constexpr auto VehicleStencilClass = 0xb68; // Size: 40, Type: struct TSoftClassPtr<UObject>
			constexpr auto VehicleStencilNew = 0xb90; // Size: 8, Type: struct USkeletalMeshComponent*
			constexpr auto AttachBoneName = 0xb98; // Size: 8, Type: struct FName
			constexpr auto CahedLastOwner = 0xba0; // Size: 8, Type: struct TWeakObjectPtr<ASolarCharacter>
			constexpr auto bUseAssistLock = 0xee0; // Size: 1, Type: char
			constexpr auto bShowAssistLockUI = 0xee0; // Size: 1, Type: char
			constexpr auto AssistLockImageSize = 0xee4; // Size: 8, Type: struct FVector2D
			constexpr auto PCAssistLockImageSize = 0xeec; // Size: 8, Type: struct FVector2D
			constexpr auto bAutoLockSpreadSwitch = 0xef4; // Size: 1, Type: char
			constexpr auto AutoLockSpreadDecPerSecond = 0xef8; // Size: 4, Type: float
			constexpr auto PreSelectProgress = 0xefc; // Size: 4, Type: float
			constexpr auto ProgressUpgradeSpeedCurve = 0xf00; // Size: 136, Type: struct FRuntimeFloatCurve
			constexpr auto AssistLockState = 0xf88; // Size: 1, Type: enum class EAssistLockState
			constexpr auto bSimulateWeaponFireSocket = 0xf89; // Size: 1, Type: bool
			constexpr auto TriggerSmoothReticleDistance = 0xf8c; // Size: 4, Type: float
			constexpr auto SmoothReticleSpeed = 0xf90; // Size: 8, Type: struct FVector2D
			constexpr auto CachedWeaponRelativeTransform = 0xfa0; // Size: 48, Type: struct FTransform
			constexpr auto CachedFireMuzzleTransform = 0xfd0; // Size: 48, Type: struct FTransform
			constexpr auto CachedTurretVSocketTransform = 0x1000; // Size: 48, Type: struct FTransform
			constexpr auto CachedTurretHSocketTransform = 0x1030; // Size: 48, Type: struct FTransform
			constexpr auto SimulateMuzzleDistanceThreshold = 0x1060; // Size: 4, Type: float
			constexpr auto VehicleWeaponPrimaryOverrideBulletClass = 0x10c0; // Size: 8, Type: ASolarBullet*
			constexpr auto VehicleWeaponSecondaryOverrideBulletClass = 0x10c8; // Size: 8, Type: ASolarBullet*
			constexpr auto VehicleWeaponPrimaryOverrideTraceBulletClass = 0x10d0; // Size: 8, Type: ASolarBullet*
			constexpr auto BlockVehicleWeaponFireTags = 0x10d8; // Size: 32, Type: struct FGameplayTagContainer
			constexpr auto bEnablePreAimingLaser = 0x1111; // Size: 1, Type: bool
			constexpr auto bNotOptTickIntervalPreAimingActive = 0x1112; // Size: 1, Type: bool
			constexpr auto PreAimingLaserLaunchScoket = 0x1114; // Size: 8, Type: struct FName
			constexpr auto PreAimingLaserFX = 0x1120; // Size: 40, Type: struct TSoftObjectPtr<UParticleSystem>
			constexpr auto PreAimingLaserEnermyFX = 0x1148; // Size: 40, Type: struct TSoftObjectPtr<UParticleSystem>
			constexpr auto PreAimingLaserChagringPhase = 0x1170; // Size: 4, Type: int32_t
			constexpr auto PreAimingLaserEffect = 0x1178; // Size: 8, Type: struct UParticleSystemComponent*
			constexpr auto bEnableBackupAmmo = 0x1180; // Size: 1, Type: bool
			constexpr auto BackupAmmoFireCost = 0x1184; // Size: 4, Type: int32_t
			constexpr auto MaxBackupAmmo = 0x1188; // Size: 4, Type: int32_t
			constexpr auto ReloadBackupAmmoInterval = 0x118c; // Size: 4, Type: float
			constexpr auto ReloadBackupAmmoNum = 0x1190; // Size: 4, Type: int32_t
			constexpr auto CurrentBackupAmmo = 0x1194; // Size: 4, Type: int32_t
			constexpr auto bEnableRechamber = 0x11a0; // Size: 1, Type: bool
			constexpr auto PlayRechamberFinishTime = 0x11a4; // Size: 4, Type: float
			constexpr auto RechamberStartAndStopSound = 0x11b0; // Size: 16, Type: struct FString
			constexpr auto RechamberFinishSound = 0x11c0; // Size: 16, Type: struct FString
			constexpr auto RechamberAlertVFX = 0x11d0; // Size: 144, Type: struct FVehicleVFX
			constexpr auto RechamberAlertMaterialIndex = 0x1260; // Size: 4, Type: int32_t
			constexpr auto bKeepWeaponStateAfterUncontrolled = 0x1264; // Size: 1, Type: bool
			constexpr auto ReloadSoundName1P = 0x1268; // Size: 16, Type: struct FString
			constexpr auto ReloadSoundName3P = 0x1278; // Size: 16, Type: struct FString
			constexpr auto ReloadSoundName3PEnemy = 0x1288; // Size: 16, Type: struct FString
			constexpr auto bReloadingAfterUncontrol = 0x1298; // Size: 1, Type: bool
			constexpr auto ReloadAbilityClass = 0x12a0; // Size: 8, Type: USolarVehicleGameplayAbility*
	}
} 
