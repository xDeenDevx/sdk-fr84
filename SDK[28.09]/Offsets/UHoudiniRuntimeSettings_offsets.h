namespace offsets
{
	namespace UHoudiniRuntimeSettings
	{
			constexpr auto SessionType = 0x28; // Size: 1, Type: enum class EHoudiniRuntimeSettingsSessionType
			constexpr auto ServerHost = 0x30; // Size: 16, Type: struct FString
			constexpr auto ServerPort = 0x40; // Size: 4, Type: int32_t
			constexpr auto ServerPipeName = 0x48; // Size: 16, Type: struct FString
			constexpr auto bStartAutomaticServer = 0x58; // Size: 1, Type: bool
			constexpr auto AutomaticServerTimeout = 0x5c; // Size: 4, Type: float
			constexpr auto bSyncWithHoudiniCook = 0x60; // Size: 1, Type: bool
			constexpr auto bCookUsingHoudiniTime = 0x61; // Size: 1, Type: bool
			constexpr auto bSyncViewport = 0x62; // Size: 1, Type: bool
			constexpr auto bSyncHoudiniViewport = 0x63; // Size: 1, Type: bool
			constexpr auto bSyncUnrealViewport = 0x64; // Size: 1, Type: bool
			constexpr auto bShowMultiAssetDialog = 0x65; // Size: 1, Type: bool
			constexpr auto bPreferHdaMemoryCopyOverHdaSourceFile = 0x66; // Size: 1, Type: bool
			constexpr auto bPauseCookingOnStart = 0x67; // Size: 1, Type: bool
			constexpr auto bDisplaySlateCookingNotifications = 0x68; // Size: 1, Type: bool
			constexpr auto DefaultTemporaryCookFolder = 0x70; // Size: 16, Type: struct FString
			constexpr auto DefaultBakeFolder = 0x80; // Size: 16, Type: struct FString
			constexpr auto bEnableTheReferenceCountedInputSystem = 0x90; // Size: 1, Type: bool
			constexpr auto MarshallingLandscapesUseDefaultUnrealScaling = 0x91; // Size: 1, Type: bool
			constexpr auto MarshallingLandscapesUseFullResolution = 0x92; // Size: 1, Type: bool
			constexpr auto MarshallingLandscapesForceMinMaxValues = 0x93; // Size: 1, Type: bool
			constexpr auto MarshallingLandscapesForcedMinValue = 0x94; // Size: 4, Type: float
			constexpr auto MarshallingLandscapesForcedMaxValue = 0x98; // Size: 4, Type: float
			constexpr auto bAddRotAndScaleAttributesOnCurves = 0x9c; // Size: 1, Type: bool
			constexpr auto bUseLegacyInputCurves = 0x9d; // Size: 1, Type: bool
			constexpr auto MarshallingSplineResolution = 0xa0; // Size: 4, Type: float
			constexpr auto bEnableProxyStaticMesh = 0xa4; // Size: 1, Type: bool
			constexpr auto bShowDefaultMesh = 0xa5; // Size: 1, Type: bool
			constexpr auto bEnableProxyStaticMeshRefinementByTimer = 0xa6; // Size: 1, Type: bool
			constexpr auto ProxyMeshAutoRefineTimeoutSeconds = 0xa8; // Size: 4, Type: float
			constexpr auto bEnableProxyStaticMeshRefinementOnPreSaveWorld = 0xac; // Size: 1, Type: bool
			constexpr auto bEnableProxyStaticMeshRefinementOnPreBeginPIE = 0xad; // Size: 1, Type: bool
			constexpr auto bDoubleSidedGeometry = 0xb0; // Size: 1, Type: char
			constexpr auto PhysMaterial = 0xb8; // Size: 8, Type: struct UPhysicalMaterial*
			constexpr auto DefaultBodyInstance = 0xc0; // Size: 304, Type: struct FBodyInstance
			constexpr auto CollisionTraceFlag = 0x1f0; // Size: 1, Type: enum class ECollisionTraceFlag
			constexpr auto LightMapResolution = 0x1f4; // Size: 4, Type: int32_t
			constexpr auto LpvBiasMultiplier = 0x1f8; // Size: 4, Type: float
			constexpr auto GeneratedDistanceFieldResolutionScale = 0x1fc; // Size: 4, Type: float
			constexpr auto WalkableSlopeOverride = 0x200; // Size: 16, Type: struct FWalkableSlopeOverride
			constexpr auto LightMapCoordinateIndex = 0x210; // Size: 4, Type: int32_t
			constexpr auto bUseMaximumStreamingTexelRatio = 0x214; // Size: 1, Type: char
			constexpr auto StreamingDistanceMultiplier = 0x218; // Size: 4, Type: float
			constexpr auto FoliageDefaultSettings = 0x220; // Size: 8, Type: struct UFoliageType_InstancedStaticMesh*
			constexpr auto AssetUserData = 0x228; // Size: 16, Type: struct TArray<struct UAssetUserData*>
			constexpr auto bUseFullPrecisionUVs = 0x238; // Size: 1, Type: bool
			constexpr auto SrcLightmapIndex = 0x23c; // Size: 4, Type: int32_t
			constexpr auto DstLightmapIndex = 0x240; // Size: 4, Type: int32_t
			constexpr auto MinLightmapResolution = 0x244; // Size: 4, Type: int32_t
			constexpr auto bRemoveDegenerates = 0x248; // Size: 1, Type: bool
			constexpr auto GenerateLightmapUVsFlag = 0x249; // Size: 1, Type: enum class EHoudiniRuntimeSettingsRecomputeFlag
			constexpr auto RecomputeNormalsFlag = 0x24a; // Size: 1, Type: enum class EHoudiniRuntimeSettingsRecomputeFlag
			constexpr auto RecomputeTangentsFlag = 0x24b; // Size: 1, Type: enum class EHoudiniRuntimeSettingsRecomputeFlag
			constexpr auto bUseMikkTSpace = 0x24c; // Size: 1, Type: bool
			constexpr auto bBuildAdjacencyBuffer = 0x24d; // Size: 1, Type: bool
			constexpr auto bComputeWeightedNormals = 0x24e; // Size: 1, Type: char
			constexpr auto bBuildReversedIndexBuffer = 0x24e; // Size: 1, Type: char
			constexpr auto bUseHighPrecisionTangentBasis = 0x24e; // Size: 1, Type: char
			constexpr auto DistanceFieldResolutionScale = 0x250; // Size: 4, Type: float
			constexpr auto bGenerateDistanceFieldAsIfTwoSided = 0x254; // Size: 1, Type: char
			constexpr auto bSupportFaceRemap = 0x254; // Size: 1, Type: char
			constexpr auto bPDGAsyncCommandletImportEnabled = 0x255; // Size: 1, Type: bool
			constexpr auto bEnableBackwardCompatibility = 0x256; // Size: 1, Type: bool
			constexpr auto bAutomaticLegacyHDARebuild = 0x257; // Size: 1, Type: bool
			constexpr auto bUseCustomHoudiniLocation = 0x258; // Size: 1, Type: bool
			constexpr auto CustomHoudiniLocation = 0x260; // Size: 16, Type: struct FDirectoryPath
			constexpr auto HoudiniExecutable = 0x270; // Size: 1, Type: enum class EHoudiniExecutableType
			constexpr auto CookingThreadStackSize = 0x274; // Size: 4, Type: int32_t
			constexpr auto HoudiniEnvironmentFiles = 0x278; // Size: 16, Type: struct FString
			constexpr auto SyncNetDiscPath = 0x288; // Size: 16, Type: struct FString
			constexpr auto OtlSearchPath = 0x298; // Size: 16, Type: struct FString
			constexpr auto DsoSearchPath = 0x2a8; // Size: 16, Type: struct FString
			constexpr auto ImageDsoSearchPath = 0x2b8; // Size: 16, Type: struct FString
			constexpr auto AudioDsoSearchPath = 0x2c8; // Size: 16, Type: struct FString
	}
} 
